#!/bin/bash

echo "üîç –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ü–†–ò–õ–û–ñ–ï–ù–ò–Ø BIRDWATCHING"
echo "==============================================="

echo ""
echo "1. üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ–∫—Ä–µ—Ç–æ–≤..."
if grep -q "your-super-secret" docker-compose.prod.yml; then
    echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ª–∞–±—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ docker-compose.prod.yml!"
else
    echo "‚úÖ –°–µ–∫—Ä–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ docker-compose.prod.yml"
fi

if grep -q "your-super-secret" backend/env.production.example; then
    echo "‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–ª–∞–±—ã–µ —Å–µ–∫—Ä–µ—Ç—ã –≤ env.production.example!"
else
    echo "‚úÖ –°–µ–∫—Ä–µ—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ env.production.example"
fi

echo ""
echo "2. üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö..."
if grep -q '^    - "5432:5432"' docker-compose.prod.yml; then
    echo "‚ùå –ü–æ—Ä—Ç PostgreSQL (5432) –æ—Ç–∫—Ä—ã—Ç!"
else
    echo "‚úÖ –ü–æ—Ä—Ç PostgreSQL –∑–∞–∫—Ä—ã—Ç"
fi

if grep -q '^    - "6379:6379"' docker-compose.prod.yml; then
    echo "‚ùå –ü–æ—Ä—Ç Redis (6379) –æ—Ç–∫—Ä—ã—Ç!"
else
    echo "‚úÖ –ü–æ—Ä—Ç Redis –∑–∞–∫—Ä—ã—Ç"
fi

echo ""
echo "3. üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ security middleware..."
if grep -q "import helmet from 'helmet'" backend/src/main.ts; then
    echo "‚úÖ Helmet –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω"
else
    echo "‚ùå Helmet –Ω–µ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω"
fi

if grep -q "app.use(helmet" backend/src/main.ts; then
    echo "‚úÖ Helmet –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "‚ùå Helmet –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

if grep -q "ThrottlerModule" backend/src/app.module.ts; then
    echo "‚úÖ Rate limiting –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
else
    echo "‚ùå Rate limiting –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
fi

echo ""
echo "4. üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ Swagger –≤ production..."
if grep -q "process.env.NODE_ENV !== 'production'" backend/src/main.ts; then
    echo "‚úÖ Swagger —Å–∫—Ä—ã—Ç –≤ production"
else
    echo "‚ùå Swagger –¥–æ—Å—Ç—É–ø–µ–Ω –≤ production"
fi

echo ""
echo "5. üç™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω—ã—Ö cookies..."
if grep -q "getCookieOptions" frontend/src/utils/api.ts; then
    echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies –≤ api.ts"
else
    echo "‚ùå –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies –≤ api.ts"
fi

if grep -q "getCookieOptions" frontend/src/hooks/useAuth.tsx; then
    echo "‚úÖ –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies –≤ useAuth.tsx"
else
    echo "‚ùå –ù–µ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies –≤ useAuth.tsx"
fi

echo ""
echo "6. üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–∫–µ—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
if [ -f "backend/package.json" ]; then
    if grep -q '"helmet"' backend/package.json; then
        echo "‚úÖ Helmet —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå Helmet –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if grep -q '"@nestjs/throttler"' backend/package.json; then
        echo "‚úÖ Throttler —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "‚ùå Throttler –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
else
    echo "‚ö†Ô∏è  package.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

echo ""
echo "7. üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–æ)..."
if command -v curl &> /dev/null; then
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    if curl -s -o /dev/null -w "%{http_code}" http://5.144.181.38:8080 | grep -q "200"; then
        echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –¥–æ—Å—Ç—É–ø–µ–Ω (200)"
    else
        echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ API..."
    if curl -s -o /dev/null -w "%{http_code}" http://5.144.181.38:3010/auth/profile | grep -q "401"; then
        echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç (401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞ - –Ω–æ—Ä–º–∞–ª—å–Ω–æ)"
    else
        echo "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã"
    fi
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ Swagger..."
    SWAGGER_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://5.144.181.38:3010/api/docs)
    if [ "$SWAGGER_CODE" = "404" ]; then
        echo "‚úÖ Swagger —Å–∫—Ä—ã—Ç –≤ production (404)"
    elif [ "$SWAGGER_CODE" = "200" ]; then
        echo "‚ùå Swagger –¥–æ—Å—Ç—É–ø–µ–Ω –≤ production!"
    else
        echo "‚ö†Ô∏è  Swagger: HTTP $SWAGGER_CODE"
    fi
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ security headers..."
    HEADERS=$(curl -s -I http://5.144.181.38:3010/auth/profile)
    if echo "$HEADERS" | grep -q "X-Frame-Options"; then
        echo "‚úÖ Security headers –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    else
        echo "‚ùå Security headers –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç"
    fi
    
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting (10 –±—ã—Å—Ç—Ä—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤)..."
    for i in {1..12}; do
        CODE=$(curl -s -o /dev/null -w "%{http_code}" -X POST http://5.144.181.38:3010/auth/login \
               -H "Content-Type: application/json" \
               -d '{"email":"test","password":"test"}')
        echo -n "$CODE "
        if [ "$CODE" = "429" ]; then
            echo ""
            echo "‚úÖ Rate limiting —Ä–∞–±–æ—Ç–∞–µ—Ç (429 Too Many Requests)"
            break
        fi
        sleep 0.1
    done
    echo ""
else
    echo "‚ö†Ô∏è  curl –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–µ—Ä–≤–µ—Ä–∞"
fi

echo ""
echo "üìä –†–ï–ó–Æ–ú–ï –ü–†–û–í–ï–†–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò"
echo "==============================="
echo "‚úÖ - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ"
echo "‚ùå - –¢—Ä–µ–±—É–µ—Ç –≤–Ω–∏–º–∞–Ω–∏—è" 
echo "‚ö†Ô∏è  - –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ"
echo ""
echo "üîê –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ò—Å–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ ‚ùå –ø—Ä–æ–±–ª–µ–º—ã"
echo "2. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å HTTPS —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç"
echo "3. –ü–µ—Ä–µ—Å–æ–±—Ä–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: ./redeploy.sh"
echo "4. –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É"
echo ""
echo "üìã –ü–æ–ª–Ω—ã–π –∞—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏: SECURITY_AUDIT.md"



