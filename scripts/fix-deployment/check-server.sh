#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —É–¥–∞–ª–µ–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ

SERVER_IP="5.144.181.38"
SERVER_USER="root"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è BirdWatching –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ $SERVER_IP${NC}"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞
echo -n "üì° –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞... "
if ping -c 1 $SERVER_IP > /dev/null 2>&1; then
    echo -e "${GREEN}‚úì –î–æ—Å—Ç—É–ø–µ–Ω${NC}"
else
    echo -e "${RED}‚úó –ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
echo "üîå –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:"

check_port() {
    local port=$1
    local service=$2
    echo -n "  ‚Ä¢ –ü–æ—Ä—Ç $port ($service)... "
    if nc -z $SERVER_IP $port 2>/dev/null; then
        echo -e "${GREEN}‚úì –û—Ç–∫—Ä—ã—Ç${NC}"
    else
        echo -e "${RED}‚úó –ó–∞–∫—Ä—ã—Ç${NC}"
    fi
}

check_port 80 "Web Server (–º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç)"
check_port 8080 "Frontend (–Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)"
check_port 3010 "API Backend"
check_port 5432 "PostgreSQL"
check_port 6379 "Redis"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–æ–≤
echo "üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–æ–≤:"

check_http() {
    local url=$1
    local service=$2
    echo -n "  ‚Ä¢ $service ($url)... "
    
    local response=$(curl -s -o /dev/null -w "%{http_code}" --connect-timeout 5 "$url" 2>/dev/null)
    
    if [[ $response == "200" ]]; then
        echo -e "${GREEN}‚úì 200 OK${NC}"
    elif [[ $response == "401" ]]; then
        echo -e "${YELLOW}‚ö† 401 (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)${NC}"
    elif [[ $response == "" ]]; then
        echo -e "${RED}‚úó –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞${NC}"
    else
        echo -e "${YELLOW}‚ö† HTTP $response${NC}"
    fi
}

check_http "http://$SERVER_IP" "Web Server (–ø–æ—Ä—Ç 80)"
check_http "http://$SERVER_IP:8080" "Frontend (–Ω–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)"
check_http "http://$SERVER_IP:3010" "API Root"
check_http "http://$SERVER_IP:3010/api/docs" "API Docs"
check_http "http://$SERVER_IP:3010/auth/health" "Health Check"

echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–µ—Å–ª–∏ –µ—Å—Ç—å SSH –¥–æ—Å—Ç—É–ø)
echo "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
if ssh -o ConnectTimeout=5 -o BatchMode=yes $SERVER_USER@$SERVER_IP exit 2>/dev/null; then
    ssh $SERVER_USER@$SERVER_IP 'cd /opt/birdwatching 2>/dev/null && docker-compose -f docker-compose.prod.yml ps 2>/dev/null || echo "  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ"'
else
    echo -e "${YELLOW}  ‚ö† SSH –¥–æ—Å—Ç—É–ø –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω${NC}"
fi

echo ""
echo -e "${BLUE}üìã –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:${NC}"
echo "  üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: http://$SERVER_IP:8080"
echo "  üìö API Docs: http://$SERVER_IP:3010/api/docs"
echo "  üîê –¢–µ—Å—Ç–æ–≤—ã–µ –∞–∫–∫–∞—É–Ω—Ç—ã:"
echo "    ‚Ä¢ –ê–¥–º–∏–Ω: admin@birdwatch.ru / admin123"
echo "    ‚Ä¢ –ì–∏–¥: guide@birdwatch.ru / guide123"
echo "    ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: user@birdwatch.ru / user123"
