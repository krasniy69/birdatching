import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import YandexMap from './YandexMap';

interface MeetingPointSelectorProps {
  excursionId: string;
  excursionTitle: string;
  currentLatitude?: number;
  currentLongitude?: number;
  currentMeetingPoint?: string;
  currentMeetingLatitude?: number;
  currentMeetingLongitude?: number;
  onSave: (meetingPoint: string, latitude: number, longitude: number) => Promise<void>;
  onClose: () => void;
}

const MeetingPointSelector: React.FC<MeetingPointSelectorProps> = ({
  excursionId,
  excursionTitle,
  currentLatitude,
  currentLongitude,
  currentMeetingPoint,
  currentMeetingLatitude,
  currentMeetingLongitude,
  onSave,
  onClose,
}) => {
  const [meetingPoint, setMeetingPoint] = useState(currentMeetingPoint || '');
  const [meetingLatitude, setMeetingLatitude] = useState<number | undefined>(currentMeetingLatitude);
  const [meetingLongitude, setMeetingLongitude] = useState<number | undefined>(currentMeetingLongitude);
  const [isLoading, setIsLoading] = useState(false);

  const handleMeetingSelect = (latitude: number, longitude: number) => {
    setMeetingLatitude(latitude);
    setMeetingLongitude(longitude);
  };

  const handleSave = async () => {
    if (!meetingPoint.trim()) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏');
      return;
    }

    if (!meetingLatitude || !meetingLongitude) {
      alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –∫–∞—Ä—Ç–µ');
      return;
    }

    try {
      setIsLoading(true);
      await onSave(meetingPoint.trim(), meetingLatitude, meetingLongitude);
      onClose();
    } catch (error) {
      console.error('Error saving meeting point:', error);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–æ—á–∫–∏ –≤—Å—Ç—Ä–µ—á–∏');
    } finally {
      setIsLoading(false);
    }
  };

  const handleUseExcursionLocation = () => {
    if (currentLatitude && currentLongitude) {
      setMeetingLatitude(currentLatitude);
      setMeetingLongitude(currentLongitude);
    }
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <Card className="w-full max-w-4xl max-h-[90vh] overflow-y-auto">
        <CardHeader>
          <CardTitle className="flex items-center justify-between">
            <span>–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏</span>
            <Button variant="ghost" onClick={onClose}>
              ‚úï
            </Button>
          </CardTitle>
          <p className="text-sm text-gray-600">
            –≠–∫—Å–∫—É—Ä—Å–∏—è: <strong>{excursionTitle}</strong>
          </p>
        </CardHeader>
        <CardContent className="space-y-6">
          {/* –û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏ *
            </label>
            <textarea
              value={meetingPoint}
              onChange={(e) => setMeetingPoint(e.target.value)}
              placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –£ –≥–ª–∞–≤–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –≤ –ø–∞—Ä–∫, –≤–æ–∑–ª–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å—Ç–µ–Ω–¥–∞"
              rows={3}
              className="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary focus:border-primary"
            />
            <p className="text-xs text-gray-500 mt-1">
              –£–∫–∞–∂–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ, —á—Ç–æ–±—ã —É—á–∞—Å—Ç–Ω–∏–∫–∏ –ª–µ–≥–∫–æ –Ω–∞—à–ª–∏ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏
            </p>
          </div>

          {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
          <div className="flex gap-2">
            <Button
              variant="outline"
              onClick={handleUseExcursionLocation}
              disabled={!currentLatitude || !currentLongitude}
            >
              üìç –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Å—Ç–æ —ç–∫—Å–∫—É—Ä—Å–∏–∏
            </Button>
            <Button
              variant="outline"
              onClick={() => {
                setMeetingLatitude(55.7558);
                setMeetingLongitude(37.6173);
              }}
            >
              üèõÔ∏è –¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã
            </Button>
          </div>

          {/* –ö–∞—Ä—Ç–∞ */}
          <div>
            <label className="block text-sm font-medium text-gray-700 mb-2">
              –í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ—á–∫—É –Ω–∞ –∫–∞—Ä—Ç–µ *
            </label>
            <YandexMap
              latitude={currentLatitude}
              longitude={currentLongitude}
              meetingLatitude={meetingLatitude}
              meetingLongitude={meetingLongitude}
              onMeetingSelect={handleMeetingSelect}
              editable={true}
              showMeetingPoint={true}
              height="350px"
              zoom={12}
            />
            {meetingLatitude && meetingLongitude && (
              <div className="mt-2 text-sm text-gray-600">
                <p>
                  <strong>–í—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong> {Number(meetingLatitude).toFixed(6)}, {Number(meetingLongitude).toFixed(6)}
                </p>
              </div>
            )}
          </div>

          {/* –°–æ–≤–µ—Ç—ã */}
          <div className="bg-blue-50 p-4 rounded-lg">
            <h4 className="text-sm font-medium text-blue-900 mb-2">
              üí° –°–æ–≤–µ—Ç—ã –ø–æ –≤—ã–±–æ—Ä—É –º–µ—Å—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏
            </h4>
            <ul className="text-sm text-blue-800 space-y-1">
              <li>‚Ä¢ –í—ã–±–∏—Ä–∞–π—Ç–µ –ª–µ–≥–∫–æ —É–∑–Ω–∞–≤–∞–µ–º—ã–µ –º–µ—Å—Ç–∞ (–ø–∞–º—è—Ç–Ω–∏–∫–∏, –≤—Ö–æ–¥—ã, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å—Ç–µ–Ω–¥—ã)</li>
              <li>‚Ä¢ –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞</li>
              <li>‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ –ø–∞—Ä–∫–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ–º–æ–±–∏–ª–∏—Å—Ç–æ–≤</li>
              <li>‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –º–µ—Å—Ç–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–±–æ—Ä–∞ –≥—Ä—É–ø–ø—ã</li>
            </ul>
          </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div className="flex gap-3 pt-4">
            <Button
              onClick={handleSave}
              disabled={isLoading || !meetingPoint.trim() || !meetingLatitude || !meetingLongitude}
              className="flex-1"
            >
              {isLoading ? '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ...' : 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á–∏'}
            </Button>
            <Button
              variant="outline"
              onClick={onClose}
              disabled={isLoading}
            >
              –û—Ç–º–µ–Ω–∞
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default MeetingPointSelector;
